#
# PySNMP MIB module Unity-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://./Unity-MIB
# Produced by pysmi-0.3.4 at Fri May  8 21:20:18 2020
# On host mint-dev-vm platform Linux version 4.15.0-54-generic by user ryan
# Using Python version 3.6.8 (default, Jan 14 2019, 11:02:34) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibIdentifier, Bits, Unsigned32, Counter32, NotificationType, ObjectIdentity, Counter64, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Bits", "Unsigned32", "Counter32", "NotificationType", "ObjectIdentity", "Counter64", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
mgmt = MibIdentifier((1, 3, 6, 1, 2))
mib_2 = MibIdentifier((1, 3, 6, 1, 2, 1))
system = MibIdentifier((1, 3, 6, 1, 2, 1, 1))
sysDescr = MibScalar((1, 3, 6, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDescr.setStatus('current')
sysObjectID = MibScalar((1, 3, 6, 1, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysObjectID.setStatus('current')
sysContact = MibScalar((1, 3, 6, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysContact.setStatus('current')
sysName = MibScalar((1, 3, 6, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysName.setStatus('current')
sysLocation = MibScalar((1, 3, 6, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocation.setStatus('current')
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
emc = MibIdentifier((1, 3, 6, 1, 4, 1, 1139))
unity = MibIdentifier((1, 3, 6, 1, 4, 1, 1139, 103))
unityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1139, 103, 1))
UnityPoll = MibIdentifier((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19))
agentVersion = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVersion.setStatus('mandatory')
mibVersion = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibVersion.setStatus('mandatory')
manufacturer = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: manufacturer.setStatus('mandatory')
model = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: model.setStatus('mandatory')
serialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('mandatory')
operationEnvironmentVersion = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operationEnvironmentVersion.setStatus('mandatory')
managementIP = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementIP.setStatus('mandatory')
currentPower = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentPower.setStatus('mandatory')
averagePower = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: averagePower.setStatus('mandatory')
numberOfStorageProcessor = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfStorageProcessor.setStatus('mandatory')
numberOfEnclosure = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfEnclosure.setStatus('mandatory')
numberOfPowerSupply = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfPowerSupply.setStatus('mandatory')
numberOfFan = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfFan.setStatus('mandatory')
numberOfPhysicalDisk = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfPhysicalDisk.setStatus('mandatory')
numberOfFrontendPort = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfFrontendPort.setStatus('mandatory')
numberOfBackendPort = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfBackendPort.setStatus('mandatory')
totalCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalCapacity.setStatus('mandatory')
usedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usedCapacity.setStatus('mandatory')
freeCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: freeCapacity.setStatus('mandatory')
totalThroughput = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalThroughput.setStatus('mandatory')
readThroughput = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: readThroughput.setStatus('mandatory')
writeThroughput = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: writeThroughput.setStatus('mandatory')
totalBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalBandwidth.setStatus('mandatory')
readBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: readBandwidth.setStatus('mandatory')
writeBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: writeBandwidth.setStatus('mandatory')
storageProcessorTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26), )
if mibBuilder.loadTexts: storageProcessorTable.setStatus('mandatory')
storageProcessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1), ).setIndexNames((0, "Unity-MIB", "storageProcessorId"))
if mibBuilder.loadTexts: storageProcessorEntry.setStatus('mandatory')
storageProcessorId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorId.setStatus('mandatory')
storageProcessorName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorName.setStatus('mandatory')
storageProcessorSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorSerialNumber.setStatus('mandatory')
storageProcessorOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorOperationalState.setStatus('mandatory')
storageProcessorCpuUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorCpuUtilization.setStatus('mandatory')
storageProcessorTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorTotalThroughput.setStatus('mandatory')
storageProcessorReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorReadThroughput.setStatus('mandatory')
storageProcessorWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorWriteThroughput.setStatus('mandatory')
storageProcessorTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorTotalBandwidth.setStatus('mandatory')
storageProcessorReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorReadBandwidth.setStatus('mandatory')
storageProcessorWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorWriteBandwidth.setStatus('mandatory')
storageProcessorCacheDirtySize = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorCacheDirtySize.setStatus('mandatory')
storageProcessorReadCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorReadCacheState.setStatus('mandatory')
storageProcessorWriteCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorWriteCacheState.setStatus('mandatory')
storageProcessorFastCacheReadHitIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorFastCacheReadHitIOs.setStatus('mandatory')
storageProcessorFastCacheWriteHitIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorFastCacheWriteHitIOs.setStatus('mandatory')
storageProcessorFastCacheReadHitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorFastCacheReadHitRate.setStatus('mandatory')
storageProcessorFastCacheWriteHitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 26, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorFastCacheWriteHitRate.setStatus('mandatory')
poolTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolTable.setStatus('mandatory')
poolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "poolId"))
if mibBuilder.loadTexts: poolEntry.setStatus('mandatory')
poolId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolId.setStatus('mandatory')
poolName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolName.setStatus('mandatory')
poolDiskTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolDiskTypes.setStatus('mandatory')
poolRaidLevels = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolRaidLevels.setStatus('mandatory')
poolFastCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolFastCacheStatus.setStatus('mandatory')
poolNumberOfPhysicalDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolNumberOfPhysicalDisk.setStatus('mandatory')
poolTotalCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolTotalCapacity.setStatus('mandatory')
poolRemainingCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolRemainingCapacity.setStatus('mandatory')
poolUsedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolUsedCapacity.setStatus('mandatory')
poolCapacityUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 27, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolCapacityUtilization.setStatus('mandatory')
volumeTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTable.setStatus('mandatory')
volumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "volumeId"))
if mibBuilder.loadTexts: volumeEntry.setStatus('mandatory')
volumeId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeId.setStatus('mandatory')
volumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeName.setStatus('mandatory')
volumeRaidLevels = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeRaidLevels.setStatus('mandatory')
volumeAllocatedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeAllocatedSize.setStatus('mandatory')
volumeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeSize.setStatus('mandatory')
volumeOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeOperationalState.setStatus('mandatory')
volumeFastCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFastCacheState.setStatus('mandatory')
volumeDefaultStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeDefaultStorageProcessor.setStatus('mandatory')
volumeCurrentStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeCurrentStorageProcessor.setStatus('mandatory')
volumeResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeResponseTime.setStatus('mandatory')
volumeQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeQueueLength.setStatus('mandatory')
volumeTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTotalThroughput.setStatus('mandatory')
volumeReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeReadThroughput.setStatus('mandatory')
volumeWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeWriteThroughput.setStatus('mandatory')
volumeTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTotalBandwidth.setStatus('mandatory')
volumeReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeReadBandwidth.setStatus('mandatory')
volumeWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeWriteBandwidth.setStatus('mandatory')
volumeUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeUtilization.setStatus('mandatory')
volumeHostInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 28, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeHostInfo.setStatus('mandatory')
diskTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTable.setStatus('mandatory')
diskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "diskId"))
if mibBuilder.loadTexts: diskEntry.setStatus('mandatory')
diskId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskId.setStatus('mandatory')
diskName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskName.setStatus('mandatory')
diskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskModel.setStatus('mandatory')
diskSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskSerialNumber.setStatus('mandatory')
diskFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskFirmwareVersion.setStatus('mandatory')
diskType = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskType.setStatus('mandatory')
diskPhysicalLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskPhysicalLocation.setStatus('mandatory')
diskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatus.setStatus('mandatory')
diskRawCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskRawCapacity.setStatus('mandatory')
diskCurrentPool = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskCurrentPool.setStatus('mandatory')
diskResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskResponseTime.setStatus('mandatory')
diskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskQueueLength.setStatus('mandatory')
diskTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTotalThroughput.setStatus('mandatory')
diskReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskReadThroughput.setStatus('mandatory')
diskWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskWriteThroughput.setStatus('mandatory')
diskTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTotalBandwidth.setStatus('mandatory')
diskReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskReadBandwidth.setStatus('mandatory')
diskWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskWriteBandwidth.setStatus('mandatory')
diskUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 29, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskUtilization.setStatus('mandatory')
frontendPortTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortTable.setStatus('mandatory')
frontendPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "frontendPortId"))
if mibBuilder.loadTexts: frontendPortEntry.setStatus('mandatory')
frontendPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortId.setStatus('mandatory')
frontendPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortName.setStatus('mandatory')
frontendPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortAddress.setStatus('mandatory')
frontendPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortType.setStatus('mandatory')
frontendPortCurrentSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortCurrentSpeed.setStatus('mandatory')
frontendPortSupportedSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortSupportedSpeed.setStatus('mandatory')
frontendPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortStatus.setStatus('mandatory')
frontendPortTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortTotalThroughput.setStatus('mandatory')
frontendPortReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortReadThroughput.setStatus('mandatory')
frontendPortWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortWriteThroughput.setStatus('mandatory')
frontendPortTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortTotalBandwidth.setStatus('mandatory')
frontendPortReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortReadBandwidth.setStatus('mandatory')
frontendPortWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 30, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortWriteBandwidth.setStatus('mandatory')
backendPortTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortTable.setStatus('mandatory')
backendPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "backendPortId"))
if mibBuilder.loadTexts: backendPortEntry.setStatus('mandatory')
backendPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortId.setStatus('mandatory')
backendPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortName.setStatus('mandatory')
backendPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortType.setStatus('mandatory')
backendPortPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortPortNumber.setStatus('mandatory')
backendPortCurrentSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortCurrentSpeed.setStatus('mandatory')
backendPortParentIoModule = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortParentIoModule.setStatus('mandatory')
backendPortParentStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortParentStorageProcessor.setStatus('mandatory')
backendPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 31, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortStatus.setStatus('mandatory')
hostTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTable.setStatus('mandatory')
hostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "hostId"))
if mibBuilder.loadTexts: hostEntry.setStatus('mandatory')
hostId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostId.setStatus('mandatory')
hostName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostName.setStatus('mandatory')
hostNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostNetworkAddress.setStatus('mandatory')
hostInitiators = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInitiators.setStatus('mandatory')
hostOperationSystemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOperationSystemVersion.setStatus('mandatory')
hostAssignedStorageVolumes = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 32, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostAssignedStorageVolumes.setStatus('mandatory')
enclosureTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33), )
if mibBuilder.loadTexts: enclosureTable.setStatus('mandatory')
enclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1), ).setIndexNames((0, "Unity-MIB", "enclosureId"))
if mibBuilder.loadTexts: enclosureEntry.setStatus('mandatory')
enclosureId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureId.setStatus('mandatory')
enclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureName.setStatus('mandatory')
enclosureModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureModel.setStatus('mandatory')
enclosureSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSerialNumber.setStatus('mandatory')
enclosurePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosurePartNumber.setStatus('mandatory')
enclosureHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureHealthStatus.setStatus('mandatory')
enclosureCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureCurrentPower.setStatus('mandatory')
enclosureAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAveragePower.setStatus('mandatory')
enclosureMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureMaxPower.setStatus('mandatory')
enclosureCurrentTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureCurrentTemperature.setStatus('mandatory')
enclosureAverageTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAverageTemperature.setStatus('mandatory')
enclosureMaxTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 33, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureMaxTemperature.setStatus('mandatory')
powerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34), )
if mibBuilder.loadTexts: powerSupplyTable.setStatus('mandatory')
powerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1), ).setIndexNames((0, "Unity-MIB", "powerSupplyId"))
if mibBuilder.loadTexts: powerSupplyEntry.setStatus('mandatory')
powerSupplyId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyId.setStatus('mandatory')
powerSupplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyName.setStatus('mandatory')
powerSupplyManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyManufacturer.setStatus('mandatory')
powerSupplyModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyModel.setStatus('mandatory')
powerSupplyFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyFirmwareVersion.setStatus('mandatory')
powerSupplyParentEnclosure = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyParentEnclosure.setStatus('mandatory')
powerSupplyStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyStorageProcessor.setStatus('mandatory')
powerSupplyHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 34, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyHealthStatus.setStatus('mandatory')
fanTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35), )
if mibBuilder.loadTexts: fanTable.setStatus('mandatory')
fanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35, 1), ).setIndexNames((0, "Unity-MIB", "fanId"))
if mibBuilder.loadTexts: fanEntry.setStatus('mandatory')
fanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanId.setStatus('mandatory')
fanName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanName.setStatus('mandatory')
fanSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanSlotNumber.setStatus('mandatory')
fanParentEnclosure = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanParentEnclosure.setStatus('mandatory')
fanHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 35, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanHealthStatus.setStatus('mandatory')
bbuTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36), )
if mibBuilder.loadTexts: bbuTable.setStatus('mandatory')
bbuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1), ).setIndexNames((0, "Unity-MIB", "bbuId"))
if mibBuilder.loadTexts: bbuEntry.setStatus('mandatory')
bbuId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuId.setStatus('mandatory')
bbuName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuName.setStatus('mandatory')
bbuManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuManufacturer.setStatus('mandatory')
bbuModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuModel.setStatus('mandatory')
bbuFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuFirmwareVersion.setStatus('mandatory')
bbuParentStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuParentStorageProcessor.setStatus('mandatory')
bbuHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 1, 19, 36, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuHealthStatus.setStatus('mandatory')
mibBuilder.exportSymbols("Unity-MIB", volumeSize=volumeSize, frontendPortId=frontendPortId, frontendPortReadThroughput=frontendPortReadThroughput, frontendPortWriteBandwidth=frontendPortWriteBandwidth, poolCapacityUtilization=poolCapacityUtilization, storageProcessorCpuUtilization=storageProcessorCpuUtilization, enclosureAverageTemperature=enclosureAverageTemperature, numberOfFan=numberOfFan, hostId=hostId, serialNumber=serialNumber, frontendPortAddress=frontendPortAddress, backendPortName=backendPortName, diskFirmwareVersion=diskFirmwareVersion, mib_2=mib_2, bbuModel=bbuModel, diskSerialNumber=diskSerialNumber, diskTotalThroughput=diskTotalThroughput, poolRaidLevels=poolRaidLevels, volumeTotalThroughput=volumeTotalThroughput, sysContact=sysContact, model=model, volumeDefaultStorageProcessor=volumeDefaultStorageProcessor, numberOfBackendPort=numberOfBackendPort, bbuTable=bbuTable, powerSupplyName=powerSupplyName, writeBandwidth=writeBandwidth, enclosureSerialNumber=enclosureSerialNumber, enclosureCurrentTemperature=enclosureCurrentTemperature, backendPortStatus=backendPortStatus, powerSupplyModel=powerSupplyModel, storageProcessorOperationalState=storageProcessorOperationalState, storageProcessorFastCacheWriteHitIOs=storageProcessorFastCacheWriteHitIOs, frontendPortStatus=frontendPortStatus, bbuEntry=bbuEntry, storageProcessorTotalBandwidth=storageProcessorTotalBandwidth, hostNetworkAddress=hostNetworkAddress, private=private, poolEntry=poolEntry, sysObjectID=sysObjectID, diskReadBandwidth=diskReadBandwidth, frontendPortWriteThroughput=frontendPortWriteThroughput, diskModel=diskModel, fanId=fanId, hostOperationSystemVersion=hostOperationSystemVersion, readBandwidth=readBandwidth, frontendPortType=frontendPortType, backendPortParentStorageProcessor=backendPortParentStorageProcessor, sysLocation=sysLocation, hostTable=hostTable, storageProcessorReadCacheState=storageProcessorReadCacheState, UnityPoll=UnityPoll, managementIP=managementIP, volumeFastCacheState=volumeFastCacheState, diskRawCapacity=diskRawCapacity, volumeId=volumeId, diskType=diskType, storageProcessorTotalThroughput=storageProcessorTotalThroughput, sysDescr=sysDescr, unityObjects=unityObjects, storageProcessorFastCacheReadHitRate=storageProcessorFastCacheReadHitRate, poolUsedCapacity=poolUsedCapacity, bbuManufacturer=bbuManufacturer, diskName=diskName, volumeWriteBandwidth=volumeWriteBandwidth, diskStatus=diskStatus, hostAssignedStorageVolumes=hostAssignedStorageVolumes, powerSupplyStorageProcessor=powerSupplyStorageProcessor, fanTable=fanTable, operationEnvironmentVersion=operationEnvironmentVersion, poolRemainingCapacity=poolRemainingCapacity, diskWriteThroughput=diskWriteThroughput, backendPortPortNumber=backendPortPortNumber, backendPortId=backendPortId, volumeOperationalState=volumeOperationalState, volumeEntry=volumeEntry, volumeHostInfo=volumeHostInfo, fanHealthStatus=fanHealthStatus, diskReadThroughput=diskReadThroughput, storageProcessorWriteBandwidth=storageProcessorWriteBandwidth, unity=unity, frontendPortCurrentSpeed=frontendPortCurrentSpeed, backendPortParentIoModule=backendPortParentIoModule, diskId=diskId, powerSupplyEntry=powerSupplyEntry, poolNumberOfPhysicalDisk=poolNumberOfPhysicalDisk, powerSupplyId=powerSupplyId, emc=emc, bbuId=bbuId, manufacturer=manufacturer, numberOfStorageProcessor=numberOfStorageProcessor, frontendPortName=frontendPortName, enclosureAveragePower=enclosureAveragePower, poolId=poolId, volumeUtilization=volumeUtilization, volumeReadBandwidth=volumeReadBandwidth, storageProcessorWriteThroughput=storageProcessorWriteThroughput, storageProcessorEntry=storageProcessorEntry, volumeTable=volumeTable, diskCurrentPool=diskCurrentPool, enclosureTable=enclosureTable, enclosureName=enclosureName, enclosureMaxPower=enclosureMaxPower, poolTotalCapacity=poolTotalCapacity, usedCapacity=usedCapacity, diskTable=diskTable, mgmt=mgmt, bbuFirmwareVersion=bbuFirmwareVersion, diskEntry=diskEntry, storageProcessorCacheDirtySize=storageProcessorCacheDirtySize, mibVersion=mibVersion, numberOfFrontendPort=numberOfFrontendPort, powerSupplyManufacturer=powerSupplyManufacturer, frontendPortTotalThroughput=frontendPortTotalThroughput, frontendPortReadBandwidth=frontendPortReadBandwidth, sysName=sysName, frontendPortTotalBandwidth=frontendPortTotalBandwidth, enclosureCurrentPower=enclosureCurrentPower, poolName=poolName, frontendPortTable=frontendPortTable, frontendPortSupportedSpeed=frontendPortSupportedSpeed, volumeCurrentStorageProcessor=volumeCurrentStorageProcessor, fanEntry=fanEntry, backendPortEntry=backendPortEntry, powerSupplyFirmwareVersion=powerSupplyFirmwareVersion, numberOfPowerSupply=numberOfPowerSupply, storageProcessorTable=storageProcessorTable, averagePower=averagePower, storageProcessorReadBandwidth=storageProcessorReadBandwidth, readThroughput=readThroughput, diskPhysicalLocation=diskPhysicalLocation, storageProcessorFastCacheWriteHitRate=storageProcessorFastCacheWriteHitRate, diskWriteBandwidth=diskWriteBandwidth, enclosureMaxTemperature=enclosureMaxTemperature, writeThroughput=writeThroughput, enclosureEntry=enclosureEntry, bbuHealthStatus=bbuHealthStatus, diskUtilization=diskUtilization, volumeName=volumeName, powerSupplyTable=powerSupplyTable, totalBandwidth=totalBandwidth, bbuName=bbuName, diskResponseTime=diskResponseTime, enclosureModel=enclosureModel, storageProcessorReadThroughput=storageProcessorReadThroughput, storageProcessorName=storageProcessorName, volumeReadThroughput=volumeReadThroughput, enclosureHealthStatus=enclosureHealthStatus, volumeAllocatedSize=volumeAllocatedSize, fanName=fanName, enterprises=enterprises, internet=internet, backendPortType=backendPortType, diskTotalBandwidth=diskTotalBandwidth, currentPower=currentPower, volumeWriteThroughput=volumeWriteThroughput, totalThroughput=totalThroughput, storageProcessorFastCacheReadHitIOs=storageProcessorFastCacheReadHitIOs, storageProcessorId=storageProcessorId, storageProcessorWriteCacheState=storageProcessorWriteCacheState, dod=dod, backendPortTable=backendPortTable, storageProcessorSerialNumber=storageProcessorSerialNumber, backendPortCurrentSpeed=backendPortCurrentSpeed, volumeResponseTime=volumeResponseTime, poolFastCacheStatus=poolFastCacheStatus, hostEntry=hostEntry, volumeQueueLength=volumeQueueLength, fanSlotNumber=fanSlotNumber, powerSupplyHealthStatus=powerSupplyHealthStatus, agentVersion=agentVersion, hostInitiators=hostInitiators, enclosureId=enclosureId, frontendPortEntry=frontendPortEntry, volumeRaidLevels=volumeRaidLevels, freeCapacity=freeCapacity, org=org, system=system, poolDiskTypes=poolDiskTypes, volumeTotalBandwidth=volumeTotalBandwidth, enclosurePartNumber=enclosurePartNumber, hostName=hostName, poolTable=poolTable, numberOfPhysicalDisk=numberOfPhysicalDisk, totalCapacity=totalCapacity, numberOfEnclosure=numberOfEnclosure, powerSupplyParentEnclosure=powerSupplyParentEnclosure, fanParentEnclosure=fanParentEnclosure, diskQueueLength=diskQueueLength, bbuParentStorageProcessor=bbuParentStorageProcessor)
