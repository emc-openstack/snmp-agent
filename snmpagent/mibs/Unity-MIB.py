#
# PySNMP MIB module Unity-MIB (http://pysnmp.sf.net)
# ASN.1 source file://.\Unity-MIB
# Produced by pysmi-0.1.3 at Mon Jun 19 07:48:44 2017
# On host ? platform ? version ? by user ?
# Using Python version 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:42:59) [MSC v.1500 32 bit (Intel)]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, MibIdentifier, UInteger32, TimeTicks, Counter64, Unsigned32, iso, Gauge32, ModuleIdentity, ObjectIdentity, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "MibIdentifier", "UInteger32", "TimeTicks", "Counter64", "Unsigned32", "iso", "Gauge32", "ModuleIdentity", "ObjectIdentity", "Bits", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
emc = MibIdentifier((1, 3, 6, 1, 4, 1, 1139))
unity = MibIdentifier((1, 3, 6, 1, 4, 1, 1139, 103))
unityStorageObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1139, 103, 2))
agentVersion = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentVersion.setStatus('mandatory')
mibVersion = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibVersion.setStatus('mandatory')
manufacturer = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: manufacturer.setStatus('mandatory')
model = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: model.setStatus('mandatory')
serialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('mandatory')
operationEnvironmentVersion = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: operationEnvironmentVersion.setStatus('mandatory')
managementIP = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: managementIP.setStatus('mandatory')
currentPower = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentPower.setStatus('mandatory')
averagePower = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: averagePower.setStatus('mandatory')
numberOfstorageProcessor = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 10), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfstorageProcessor.setStatus('mandatory')
numberOfEnclosure = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 11), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfEnclosure.setStatus('mandatory')
numberOfPowerSupply = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 12), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfPowerSupply.setStatus('mandatory')
numberOfFan = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 13), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfFan.setStatus('mandatory')
numberOfPhysicalDisk = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 14), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfPhysicalDisk.setStatus('mandatory')
numberOfFrontendPort = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 15), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfFrontendPort.setStatus('mandatory')
numberOfBackendPort = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 16), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfBackendPort.setStatus('mandatory')
totalCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalCapacity.setStatus('mandatory')
usedCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usedCapacity.setStatus('mandatory')
freeCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: freeCapacity.setStatus('mandatory')
totalThroughput = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalThroughput.setStatus('mandatory')
readThroughput = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: readThroughput.setStatus('mandatory')
writeThroughput = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: writeThroughput.setStatus('mandatory')
totalBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalBandwidth.setStatus('mandatory')
readBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: readBandwidth.setStatus('mandatory')
writeBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 1139, 103, 2, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: writeBandwidth.setStatus('mandatory')
storageProcessorTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26), )
if mibBuilder.loadTexts: storageProcessorTable.setStatus('mandatory')
storageProcessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1), ).setIndexNames((0, "Unity-MIB", "storageProcessorName"))
if mibBuilder.loadTexts: storageProcessorEntry.setStatus('mandatory')
storageProcessorName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorName.setStatus('mandatory')
storageProcessorSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorSerialNumber.setStatus('mandatory')
storageProcessorNumberOfFrontendPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 3), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorNumberOfFrontendPort.setStatus('mandatory')
storageProcessorNumberOfBackendPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 4), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorNumberOfBackendPort.setStatus('mandatory')
storageProcessorOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorOperationalState.setStatus('mandatory')
storageProcessorCpuUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorCpuUtilization.setStatus('mandatory')
storageProcessorTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorTotalThroughput.setStatus('mandatory')
storageProcessorReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorReadThroughput.setStatus('mandatory')
storageProcessorWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorWriteThroughput.setStatus('mandatory')
storageProcessorTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorTotalBandwidth.setStatus('mandatory')
storageProcessorReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorReadBandwidth.setStatus('mandatory')
storageProcessorWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorWriteBandwidth.setStatus('mandatory')
storageProcessorDirtyCachePagesAmount = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorDirtyCachePagesAmount.setStatus('mandatory')
storageProcessorPercentDirtyCachePages = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorPercentDirtyCachePages.setStatus('mandatory')
storageProcessorReadCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorReadCacheState.setStatus('mandatory')
storageProcessorWriteCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 26, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: storageProcessorWriteCacheState.setStatus('mandatory')
poolTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolTable.setStatus('mandatory')
poolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "poolName"))
if mibBuilder.loadTexts: poolEntry.setStatus('mandatory')
poolName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolName.setStatus('mandatory')
poolDiskTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolDiskTypes.setStatus('mandatory')
poolRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolRaidLevel.setStatus('mandatory')
poolFastCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolFastCacheStatus.setStatus('mandatory')
poolNumberOfPhysicalDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 5), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolNumberOfPhysicalDisk.setStatus('mandatory')
poolTotalCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolTotalCapacity.setStatus('mandatory')
poolRemainingCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolRemainingCapacity.setStatus('mandatory')
poolUsedCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolUsedCapacity.setStatus('mandatory')
poolCapacityUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 27, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: poolCapacityUtilization.setStatus('mandatory')
volumeTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTable.setStatus('mandatory')
volumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "volumeId"))
if mibBuilder.loadTexts: volumeEntry.setStatus('mandatory')
volumeId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeId.setStatus('mandatory')
volumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeName.setStatus('mandatory')
volumeRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeRaidLevel.setStatus('mandatory')
volumeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeSize.setStatus('mandatory')
volumeNumberOfPhysicalDisk = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 5), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeNumberOfPhysicalDisk.setStatus('mandatory')
volumeOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeOperationalState.setStatus('mandatory')
volumeFastCacheState = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFastCacheState.setStatus('mandatory')
volumeDefaultController = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeDefaultController.setStatus('mandatory')
volumeCurrentController = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeCurrentController.setStatus('mandatory')
volumeResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeResponseTime.setStatus('mandatory')
volumeQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeQueueLength.setStatus('mandatory')
volumeTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTotalThroughput.setStatus('mandatory')
volumeReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeReadThroughput.setStatus('mandatory')
volumeWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeWriteThroughput.setStatus('mandatory')
volumeFastCacheReadHitIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFastCacheReadHitIOs.setStatus('mandatory')
volumeFastCacheWriteHitIOs = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFastCacheWriteHitIOs.setStatus('mandatory')
volumeTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeTotalBandwidth.setStatus('mandatory')
volumeReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeReadBandwidth.setStatus('mandatory')
volumeWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeWriteBandwidth.setStatus('mandatory')
volumeFastCacheReadHitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFastCacheReadHitRate.setStatus('mandatory')
volumeFastCacheWriteHitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeFastCacheWriteHitRate.setStatus('mandatory')
volumeUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeUtilization.setStatus('mandatory')
volumeHostInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 28, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volumeHostInfo.setStatus('mandatory')
diskTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTable.setStatus('mandatory')
diskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "diskName"))
if mibBuilder.loadTexts: diskEntry.setStatus('mandatory')
diskName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskName.setStatus('mandatory')
diskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskModel.setStatus('mandatory')
diskSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskSerialNumber.setStatus('mandatory')
diskFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskFirmwareVersion.setStatus('mandatory')
diskType = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskType.setStatus('mandatory')
diskPhysicalLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskPhysicalLocation.setStatus('mandatory')
diskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskStatus.setStatus('mandatory')
diskRawCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskRawCapacity.setStatus('mandatory')
diskCurrentPool = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskCurrentPool.setStatus('mandatory')
diskResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskResponseTime.setStatus('mandatory')
diskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskQueueLength.setStatus('mandatory')
diskTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTotalThroughput.setStatus('mandatory')
diskReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskReadThroughput.setStatus('mandatory')
diskWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskWriteThroughput.setStatus('mandatory')
diskTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskTotalBandwidth.setStatus('mandatory')
diskReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskReadBandwidth.setStatus('mandatory')
diskWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskWriteBandwidth.setStatus('mandatory')
diskUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 29, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskUtilization.setStatus('mandatory')
frontendPortTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortTable.setStatus('mandatory')
frontendPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "frontendPortId"))
if mibBuilder.loadTexts: frontendPortEntry.setStatus('mandatory')
frontendPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 1), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortId.setStatus('mandatory')
frontendPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortName.setStatus('mandatory')
frontendPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortAddress.setStatus('mandatory')
frontendPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortType.setStatus('mandatory')
frontendPortCurrentSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortCurrentSpeed.setStatus('mandatory')
frontendPortSupportedSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortSupportedSpeed.setStatus('mandatory')
frontendPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortStatus.setStatus('mandatory')
frontendPortTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortTotalThroughput.setStatus('mandatory')
frontendPortReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortReadThroughput.setStatus('mandatory')
frontendPortWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortWriteThroughput.setStatus('mandatory')
frontendPortTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortTotalBandwidth.setStatus('mandatory')
frontendPortReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortReadBandwidth.setStatus('mandatory')
frontendPortWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 30, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frontendPortWriteBandwidth.setStatus('mandatory')
backendPortTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortTable.setStatus('mandatory')
backendPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "backendPortId"))
if mibBuilder.loadTexts: backendPortEntry.setStatus('mandatory')
backendPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 1), UInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortId.setStatus('mandatory')
backendPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortName.setStatus('mandatory')
backendPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortType.setStatus('mandatory')
backendPortPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortPortNumber.setStatus('mandatory')
backendPortCurrentSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortCurrentSpeed.setStatus('mandatory')
backendPortParentIoModule = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortParentIoModule.setStatus('mandatory')
backendPortParentStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortParentStorageProcessor.setStatus('mandatory')
backendPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortStatus.setStatus('mandatory')
backendPortTotalThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortTotalThroughput.setStatus('mandatory')
backendPortReadThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortReadThroughput.setStatus('mandatory')
backendPortWriteThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortWriteThroughput.setStatus('mandatory')
backendPortTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortTotalBandwidth.setStatus('mandatory')
backendPortReadBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortReadBandwidth.setStatus('mandatory')
backendPortWriteBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 31, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: backendPortWriteBandwidth.setStatus('mandatory')
hostTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTable.setStatus('mandatory')
hostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32, 1), ).setMaxAccess("readonly").setIndexNames((0, "Unity-MIB", "hostHBAWWN"))
if mibBuilder.loadTexts: hostEntry.setStatus('mandatory')
hostName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostName.setStatus('mandatory')
hostNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostNetworkAddress.setStatus('mandatory')
hostHBAWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHBAWWN.setStatus('mandatory')
hostOperationSystemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostOperationSystemVersion.setStatus('mandatory')
hostAssignedStorageVolumes = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 32, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostAssignedStorageVolumes.setStatus('mandatory')
enclosureTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33), )
if mibBuilder.loadTexts: enclosureTable.setStatus('mandatory')
enclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1), ).setIndexNames((0, "Unity-MIB", "enclosureName"))
if mibBuilder.loadTexts: enclosureEntry.setStatus('mandatory')
enclosureName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureName.setStatus('mandatory')
enclosureModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureModel.setStatus('mandatory')
enclosureSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureSerialNumber.setStatus('mandatory')
enclosurePartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosurePartNumber.setStatus('mandatory')
enclosureHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureHealthStatus.setStatus('mandatory')
enclosureCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureCurrentPower.setStatus('mandatory')
enclosureAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAveragePower.setStatus('mandatory')
enclosureMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureMaxPower.setStatus('mandatory')
enclosureAverageTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureAverageTemperature.setStatus('mandatory')
enclosureMaxTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 33, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enclosureMaxTemperature.setStatus('mandatory')
powerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34), )
if mibBuilder.loadTexts: powerSupplyTable.setStatus('mandatory')
powerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1), ).setIndexNames((0, "Unity-MIB", "powerSupplyName"))
if mibBuilder.loadTexts: powerSupplyEntry.setStatus('mandatory')
powerSupplyName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyName.setStatus('mandatory')
powerSupplyManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyManufacturer.setStatus('mandatory')
powerSupplyModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyModel.setStatus('mandatory')
powerSupplyFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyFirmwareVersion.setStatus('mandatory')
powerSupplyParentEnclosure = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyParentEnclosure.setStatus('mandatory')
powerSupplyStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyStorageProcessor.setStatus('mandatory')
powerSupplyHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 34, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerSupplyHealthStatus.setStatus('mandatory')
fanTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 35), )
if mibBuilder.loadTexts: fanTable.setStatus('mandatory')
fanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 35, 1), ).setIndexNames((0, "Unity-MIB", "fanName"))
if mibBuilder.loadTexts: fanEntry.setStatus('mandatory')
fanName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 35, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanName.setStatus('mandatory')
fanSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 35, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanSlotNumber.setStatus('mandatory')
fanParentEnclosure = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 35, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanParentEnclosure.setStatus('mandatory')
fanHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 35, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanHealthStatus.setStatus('mandatory')
bbuTable = MibTable((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36), )
if mibBuilder.loadTexts: bbuTable.setStatus('mandatory')
bbuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1), ).setIndexNames((0, "Unity-MIB", "bbuName"))
if mibBuilder.loadTexts: bbuEntry.setStatus('mandatory')
bbuName = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuName.setStatus('mandatory')
bbuManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuManufacturer.setStatus('mandatory')
bbuModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuModel.setStatus('mandatory')
bbuFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuFirmwareVersion.setStatus('mandatory')
bbuParentStorageProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuParentStorageProcessor.setStatus('mandatory')
bbuSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuSlotNumber.setStatus('mandatory')
bbuHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1139, 103, 2, 36, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bbuHealthStatus.setStatus('mandatory')
mibBuilder.exportSymbols("Unity-MIB", diskReadBandwidth=diskReadBandwidth, fanEntry=fanEntry, volumeNumberOfPhysicalDisk=volumeNumberOfPhysicalDisk, volumeResponseTime=volumeResponseTime, hostTable=hostTable, diskModel=diskModel, volumeTable=volumeTable, storageProcessorTable=storageProcessorTable, volumeTotalThroughput=volumeTotalThroughput, volumeEntry=volumeEntry, enclosureMaxTemperature=enclosureMaxTemperature, numberOfFrontendPort=numberOfFrontendPort, hostEntry=hostEntry, backendPortId=backendPortId, volumeWriteBandwidth=volumeWriteBandwidth, diskReadThroughput=diskReadThroughput, backendPortType=backendPortType, storageProcessorReadCacheState=storageProcessorReadCacheState, volumeFastCacheState=volumeFastCacheState, volumeWriteThroughput=volumeWriteThroughput, powerSupplyHealthStatus=powerSupplyHealthStatus, volumeReadThroughput=volumeReadThroughput, diskUtilization=diskUtilization, volumeCurrentController=volumeCurrentController, storageProcessorWriteCacheState=storageProcessorWriteCacheState, diskWriteThroughput=diskWriteThroughput, volumeTotalBandwidth=volumeTotalBandwidth, fanName=fanName, enclosureSerialNumber=enclosureSerialNumber, backendPortTotalThroughput=backendPortTotalThroughput, hostAssignedStorageVolumes=hostAssignedStorageVolumes, powerSupplyManufacturer=powerSupplyManufacturer, totalCapacity=totalCapacity, numberOfstorageProcessor=numberOfstorageProcessor, poolName=poolName, enclosureName=enclosureName, bbuManufacturer=bbuManufacturer, backendPortEntry=backendPortEntry, freeCapacity=freeCapacity, storageProcessorOperationalState=storageProcessorOperationalState, diskStatus=diskStatus, poolTable=poolTable, bbuEntry=bbuEntry, fanSlotNumber=fanSlotNumber, mibVersion=mibVersion, backendPortCurrentSpeed=backendPortCurrentSpeed, storageProcessorTotalBandwidth=storageProcessorTotalBandwidth, agentVersion=agentVersion, frontendPortTable=frontendPortTable, org=org, frontendPortName=frontendPortName, volumeReadBandwidth=volumeReadBandwidth, storageProcessorName=storageProcessorName, poolUsedCapacity=poolUsedCapacity, poolNumberOfPhysicalDisk=poolNumberOfPhysicalDisk, powerSupplyParentEnclosure=powerSupplyParentEnclosure, averagePower=averagePower, enclosurePartNumber=enclosurePartNumber, numberOfPhysicalDisk=numberOfPhysicalDisk, unityStorageObjects=unityStorageObjects, enclosureCurrentPower=enclosureCurrentPower, volumeDefaultController=volumeDefaultController, storageProcessorWriteBandwidth=storageProcessorWriteBandwidth, storageProcessorNumberOfBackendPort=storageProcessorNumberOfBackendPort, volumeOperationalState=volumeOperationalState, writeBandwidth=writeBandwidth, enterprises=enterprises, volumeId=volumeId, usedCapacity=usedCapacity, storageProcessorNumberOfFrontendPort=storageProcessorNumberOfFrontendPort, numberOfFan=numberOfFan, volumeFastCacheReadHitRate=volumeFastCacheReadHitRate, powerSupplyStorageProcessor=powerSupplyStorageProcessor, storageProcessorPercentDirtyCachePages=storageProcessorPercentDirtyCachePages, bbuSlotNumber=bbuSlotNumber, frontendPortWriteThroughput=frontendPortWriteThroughput, diskEntry=diskEntry, readThroughput=readThroughput, internet=internet, powerSupplyTable=powerSupplyTable, model=model, hostOperationSystemVersion=hostOperationSystemVersion, backendPortPortNumber=backendPortPortNumber, powerSupplyFirmwareVersion=powerSupplyFirmwareVersion, hostNetworkAddress=hostNetworkAddress, volumeFastCacheWriteHitRate=volumeFastCacheWriteHitRate, storageProcessorReadBandwidth=storageProcessorReadBandwidth, frontendPortReadBandwidth=frontendPortReadBandwidth, volumeRaidLevel=volumeRaidLevel, poolRemainingCapacity=poolRemainingCapacity, volumeName=volumeName, frontendPortTotalBandwidth=frontendPortTotalBandwidth, storageProcessorCpuUtilization=storageProcessorCpuUtilization, frontendPortCurrentSpeed=frontendPortCurrentSpeed, diskQueueLength=diskQueueLength, backendPortTotalBandwidth=backendPortTotalBandwidth, powerSupplyModel=powerSupplyModel, storageProcessorTotalThroughput=storageProcessorTotalThroughput, diskTotalThroughput=diskTotalThroughput, diskWriteBandwidth=diskWriteBandwidth, backendPortWriteThroughput=backendPortWriteThroughput, volumeUtilization=volumeUtilization, operationEnvironmentVersion=operationEnvironmentVersion, enclosureHealthStatus=enclosureHealthStatus, serialNumber=serialNumber, frontendPortReadThroughput=frontendPortReadThroughput, diskTotalBandwidth=diskTotalBandwidth, bbuHealthStatus=bbuHealthStatus, frontendPortTotalThroughput=frontendPortTotalThroughput, private=private, manufacturer=manufacturer, enclosureMaxPower=enclosureMaxPower, diskFirmwareVersion=diskFirmwareVersion, backendPortStatus=backendPortStatus, frontendPortWriteBandwidth=frontendPortWriteBandwidth, bbuTable=bbuTable, backendPortReadBandwidth=backendPortReadBandwidth, totalBandwidth=totalBandwidth, poolCapacityUtilization=poolCapacityUtilization, backendPortWriteBandwidth=backendPortWriteBandwidth, volumeQueueLength=volumeQueueLength, diskSerialNumber=diskSerialNumber, volumeFastCacheReadHitIOs=volumeFastCacheReadHitIOs, powerSupplyName=powerSupplyName, frontendPortStatus=frontendPortStatus, diskCurrentPool=diskCurrentPool, storageProcessorSerialNumber=storageProcessorSerialNumber, hostName=hostName, poolRaidLevel=poolRaidLevel, diskTable=diskTable, frontendPortSupportedSpeed=frontendPortSupportedSpeed, numberOfBackendPort=numberOfBackendPort, storageProcessorEntry=storageProcessorEntry, storageProcessorDirtyCachePagesAmount=storageProcessorDirtyCachePagesAmount, fanTable=fanTable, fanHealthStatus=fanHealthStatus, currentPower=currentPower, bbuModel=bbuModel, backendPortName=backendPortName, storageProcessorReadThroughput=storageProcessorReadThroughput, poolTotalCapacity=poolTotalCapacity, diskType=diskType, frontendPortAddress=frontendPortAddress, unity=unity, volumeSize=volumeSize, hostHBAWWN=hostHBAWWN, backendPortParentIoModule=backendPortParentIoModule, diskName=diskName, backendPortReadThroughput=backendPortReadThroughput, enclosureEntry=enclosureEntry, diskPhysicalLocation=diskPhysicalLocation, storageProcessorWriteThroughput=storageProcessorWriteThroughput, dod=dod, backendPortTable=backendPortTable, readBandwidth=readBandwidth, bbuParentStorageProcessor=bbuParentStorageProcessor, poolEntry=poolEntry, enclosureAverageTemperature=enclosureAverageTemperature, frontendPortType=frontendPortType, frontendPortEntry=frontendPortEntry, backendPortParentStorageProcessor=backendPortParentStorageProcessor, diskRawCapacity=diskRawCapacity, frontendPortId=frontendPortId, fanParentEnclosure=fanParentEnclosure, volumeHostInfo=volumeHostInfo, totalThroughput=totalThroughput, bbuFirmwareVersion=bbuFirmwareVersion, numberOfEnclosure=numberOfEnclosure, emc=emc, volumeFastCacheWriteHitIOs=volumeFastCacheWriteHitIOs, poolDiskTypes=poolDiskTypes, writeThroughput=writeThroughput, enclosureTable=enclosureTable, diskResponseTime=diskResponseTime, poolFastCacheStatus=poolFastCacheStatus, bbuName=bbuName, managementIP=managementIP, enclosureModel=enclosureModel, powerSupplyEntry=powerSupplyEntry, numberOfPowerSupply=numberOfPowerSupply, enclosureAveragePower=enclosureAveragePower)
